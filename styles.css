*,
*::before,
*::after {
  box-sizing: border-box;
  font-family: Arial;
}
/* use vmin so that it will scale as page size changes */
body {
  background-color: #333;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  font-size: 7.5vmin;
}

/* setting position relative for game board to achieve the sliding animation of the cell by setting cell position to absolute relative to the game board */
#game-board {
  /* using css variables for repeated variables */
  --grid-size: 4;
  --cell-size: 20vmin;
  --cell-gap: 2vmin;

  display: grid;
  grid-template-rows: repeat(var(--grid-size), var(--cell-size));
  grid-template-columns: repeat(var(--grid-size), var(--cell-size));
  background-color: #ccc;
  gap: var(--cell-gap);
  border-radius: 1vmin;
  padding: var(--cell-gap);
  position: relative;
}

/* setting styling for cell */
.cell {
  background-color: #aaa;
  border-radius: 1vmin;
}

/* using css maths to handle the position of the tile */
.tile {
  --x: 0;
  --y: 3;
  --background-lightness: 20%;
  --text-lightness: 80%;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--cell-size);
  height: var(--cell-size);
  background-color: bisque;
  border-radius: 1vmin;
  /* adding two cell gap as cell gap is applied twice for border */
  top: calc(var(--y) * (var(--cell-size) + var(--cell-gap)) + var(--cell-gap));
  left: calc(var(--x) * (var(--cell-size) + var(--cell-gap)) + var(--cell-gap));
  font-weight: bold;
  background-color: hsl(200, 50%, var(--background-lightness));
  color: hsl(200, 25%, var(--text-lightness));
}
